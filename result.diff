--- vz-default.yaml	2022-12-25 19:11:08
+++ vz.yaml	2022-12-25 19:11:58
@@ -1,5 +1,10 @@
 # Example to run ubuntu using vmType: vz instead of qemu (Default)
 # This example requires Lima v0.14.0 or later and macOS 13.
+
+cpus: 2
+memory: "4GiB"
+disk: "20GiB"
+
 vmType: "vz"
 rosetta:
   # Enable Rosetta for Linux.
@@ -16,6 +21,7 @@
 
 mounts:
 - location: "~"
+  writable: true
 - location: "/tmp/lima"
   writable: true
 mountType: "virtiofs"
@@ -23,3 +29,52 @@
 networks:
 # The "vzNAT" IP address is accessible from the host, but not from other guests.
 - vzNAT: true
+
+containerd:
+  system: false
+  user: false
+hostResolver:
+  # hostResolver.hosts requires lima 0.8.3 or later. Names defined here will also
+  # resolve inside containers, and not just inside the VM itself.
+  hosts:
+    host.docker.internal: host.lima.internal
+portForwards:
+  - guestSocket: "/var/run/docker.sock"
+    hostSocket: "/Users/thr3a/.lima/default/sock/docker.sock"
+provision:
+- mode: system
+  # This script defines the host.docker.internal hostname when hostResolver is disabled.
+  # It is also needed for lima 0.8.2 and earlier, which does not support hostResolver.hosts.
+  # Names defined in /etc/hosts inside the VM are not resolved inside containers when
+  # using the hostResolver; use hostResolver.hosts instead (requires lima 0.8.3 or later).
+  script: |
+    #!/bin/sh
+    sed -i 's/host.lima.internal.*/host.lima.internal host.docker.internal/' /etc/hosts
+- mode: system
+  script: |
+    #!/bin/bash
+    set -eux -o pipefail
+    command -v docker >/dev/null 2>&1 && exit 0
+    if [ ! -e /etc/systemd/system/docker.socket.d/override.conf ]; then
+      mkdir -p /etc/systemd/system/docker.socket.d
+      # Alternatively we could just add the user to the "docker" group, but that requires restarting the user session
+      cat <<-EOF >/etc/systemd/system/docker.socket.d/override.conf
+      [Socket]
+      SocketUser=${LIMA_CIDATA_USER}
+    EOF
+    fi
+    export DEBIAN_FRONTEND=noninteractive
+    curl -fsSL https://get.docker.com | sh
+probes:
+- script: |
+    #!/bin/bash
+    set -eux -o pipefail
+    if ! timeout 30s bash -c "until command -v docker >/dev/null 2>&1; do sleep 3; done"; then
+      echo >&2 "docker is not installed yet"
+      exit 1
+    fi
+    if ! timeout 30s bash -c "until pgrep dockerd; do sleep 3; done"; then
+      echo >&2 "dockerd is not running"
+      exit 1
+    fi
+  hint: See "/var/log/cloud-init-output.log". in the guest
